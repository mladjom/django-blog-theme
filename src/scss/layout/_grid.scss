@use "../abstracts/mixins" as mixin;
@use "../abstracts/variables" as vars;
@use 'sass:map';

// Container
.container {
  width: min(100% - 3rem, 75rem);
  margin-inline: auto;
  padding-inline: map.get(vars.$spacing, 'md');
}

.content {
  max-width: 65ch; // For optimal reading length
}


// Modern Grid System
.grid {
  display: grid;
  gap: map.get(vars.$spacing, 'md');
  
  // Basic column variants
  &--2-cols {
    grid-template-columns: 1fr;
    
    @include mixin.respond-to('md') {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  &--3-cols {
    grid-template-columns: 1fr;
    
    @include mixin.respond-to('md') {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include mixin.respond-to('lg') {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  &--4-cols {
    grid-template-columns: 1fr;
    
    @include mixin.respond-to('md') {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @include mixin.respond-to('lg') {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  
  // Auto-fit grid with better responsiveness
  &--auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 20rem), 1fr));
  }
  
  // Gap variations
  &--gap-sm {
    gap: map.get(vars.$spacing, 'sm');
  }
  
  &--gap-lg {
    gap: map.get(vars.$spacing, 'lg');
  }
}

// Layout patterns with improved responsiveness
.layout {
  display: grid;
  gap: map.get(vars.$spacing, 'md');
  
  &--sidebar {
    grid-template-columns: 3fr 1fr;
    
    @include mixin.respond-to('lg') {
      grid-template-columns: 1fr;
    }
  }
  
  &--equal {
    grid-template-columns: 1fr 1fr;
    
    @include mixin.respond-to('md') {
      grid-template-columns: 1fr;
    }
  }
  
  &--featured {
    grid-template-columns: 2fr 1fr;
    
    @include mixin.respond-to('md') {
      grid-template-columns: 1fr;
    }
  }
}
